(define (make-rat n d) 
  (let ((g (gcd n d)))
    (cond
      ((>= (* n d) 0) (cons (abs (/ n g)) (abs (/ d g)))) ;; n*d>=0
      ((and (> n 0) (< d 0)) (cons (/ (- n) g) (/ (- d) g))) ;; n>0 && d<0
      (else  (cons (/ n g) (/ d g)))))) ;;n<0 && d>0
