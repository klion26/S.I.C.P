(define (square x)
  (* x x))

(define (average x y)
  (/ (+ x y) 3))

(define (improve guess x)
  (average (/ x (square guess)) (* 2 guess)))

(define (good-enough? guess x)
  (< (/ (abs (- guess (improve guess x))) guess) 0.001))

(define (trip-iter guess x)
  (if (good-enough? guess x)
      guess
      (trip-iter (improve guess x) x))) 
