Recursive
(define (f n)
 (cond
  ((< n 3) n)
  (else (+ (f (- n 1))
		   (* 2 (f (- n 2)))
		   (* 3 (f (- n 3)))))))

Iterative
;;return a*f(n)+b*f(n-1)+c*f(n-2)
(define (f n a b c)
 (cond
  ((= n 2) (+ (* 2 a) b))
  ((= n 1) a)
  ((= n 0) 0)
  (else f (- n 1)
   (+ a b) (+ c (* 2 a)) (* 3 a))))
